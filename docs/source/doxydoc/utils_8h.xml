<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="utils_8h" kind="file" language="C++">
    <compoundname>utils.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">memory</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/nico/Code/DNetPRO/include/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="5">
        <label>unordered_set</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>algorithm</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="utils_8h_1ac9b3a02b2ca0dff80fc79100dabaf37b" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int error_file</definition>
        <argsstring></argsstring>
        <name>error_file</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>error as no file found </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nico/Code/DNetPRO/include/utils.h" line="11" column="15" bodyfile="/home/nico/Code/DNetPRO/include/utils.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="utils_8h_1adcbd34bba3f01f3c38aec099a2dc8b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void file_error</definition>
        <argsstring>(const std ::string &amp;input)</argsstring>
        <name>file_error</name>
        <param>
          <type>const std ::string &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>File not found error. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>filename or path </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nico/Code/DNetPRO/include/utils.h" line="20" column="6" declfile="/home/nico/Code/DNetPRO/include/utils.h" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="utils_8h_1a9465562f0a1b94de70f98f23c183075d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std ::unique_ptr&lt; int[] &gt;</type>
        <definition>std :: unique_ptr&lt; int[] &gt; lbl2num</definition>
        <argsstring>(const std ::vector&lt; std ::string &gt; &amp;lbl)</argsstring>
        <name>lbl2num</name>
        <param>
          <type>const std ::vector&lt; std ::string &gt; &amp;</type>
          <declname>lbl</declname>
        </param>
        <briefdescription>
<para>Convert label from string to integers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lbl</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of labels in string format</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::unique_ptr&lt;int[]&gt; array of labels as integers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nico/Code/DNetPRO/include/utils.h" line="30" column="20" declfile="/home/nico/Code/DNetPRO/include/utils.h" declline="30" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="utils_8h_1a2647dab65a22b1df13c43e602e15a0cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std ::vector&lt; std ::string &gt;</type>
        <definition>std :: vector&lt; std :: string &gt; split</definition>
        <argsstring>(const std ::string &amp;txt, const std ::string &amp;del)</argsstring>
        <name>split</name>
        <param>
          <type>const std ::string &amp;</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>const std ::string &amp;</type>
          <declname>del</declname>
        </param>
        <briefdescription>
<para>Split string to tokens. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>txt</parametername>
</parameternamelist>
<parameterdescription>
<para>input string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>del</parametername>
</parameternamelist>
<parameterdescription>
<para>delimiter as string</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::vector&lt;std::string&gt; vector of token </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nico/Code/DNetPRO/include/utils.h" line="41" column="16" declfile="/home/nico/Code/DNetPRO/include/utils.h" declline="41" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__utility_h__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__utility_h__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std<sp/>::<sp/>cout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std<sp/>::<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std<sp/>::<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>std<sp/>::<sp/>unordered_set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std<sp/>::<sp/>copy_n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std<sp/>::<sp/>unique_ptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="utils_8h_1ac9b3a02b2ca0dff80fc79100dabaf37b" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="utils_8h_1ac9b3a02b2ca0dff80fc79100dabaf37b" kindref="member">error_file</ref><sp/>=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utils_8h_1adcbd34bba3f01f3c38aec099a2dc8b67" kindref="member">file_error</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>string<sp/>&amp;<sp/>input);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">std<sp/>::<sp/>unique_ptr<sp/>&lt;<sp/>int[]<sp/>&gt;<sp/><ref refid="utils_8h_1a9465562f0a1b94de70f98f23c183075d" kindref="member">lbl2num</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>vector<sp/>&lt;<sp/>std<sp/>::<sp/>string<sp/>&gt;<sp/>&amp;<sp/>lbl);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">std<sp/>::<sp/>vector<sp/>&lt;<sp/>std<sp/>::<sp/>string<sp/>&gt;<sp/><ref refid="utils_8h_1a2647dab65a22b1df13c43e602e15a0cf" kindref="member">split</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>string<sp/>&amp;<sp/>txt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std<sp/>::<sp/>string<sp/>&amp;<sp/>del);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(<sp/>(<sp/>__cplusplus<sp/>&lt;<sp/>201100<sp/>&amp;&amp;<sp/>!(_MSC_VER)<sp/>)<sp/>||<sp/>(<sp/>__GNUC__<sp/>==<sp/>4<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&lt;<sp/>9)<sp/>&amp;&amp;<sp/>!(__clang__)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">std</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">std<sp/>::<sp/>unique_ptr<sp/>&lt;<sp/>T<sp/>&gt;<sp/>make_unique<sp/>(<sp/>std<sp/>::<sp/>size_t<sp/>size<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__utility_h__</highlight></codeline>
    </programlisting>
    <location file="/home/nico/Code/DNetPRO/include/utils.h"/>
  </compounddef>
</doxygen>
